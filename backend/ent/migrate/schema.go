// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DoctorsColumns holds the columns for the "doctors" table.
	DoctorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "doctor_email", Type: field.TypeString},
		{Name: "doctor_name", Type: field.TypeString},
		{Name: "doctor_tel", Type: field.TypeString},
	}
	// DoctorsTable holds the schema information for the "doctors" table.
	DoctorsTable = &schema.Table{
		Name:        "doctors",
		Columns:     DoctorsColumns,
		PrimaryKey:  []*schema.Column{DoctorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DrugsColumns holds the columns for the "drugs" table.
	DrugsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "drug_name", Type: field.TypeString},
	}
	// DrugsTable holds the schema information for the "drugs" table.
	DrugsTable = &schema.Table{
		Name:        "drugs",
		Columns:     DrugsColumns,
		PrimaryKey:  []*schema.Column{DrugsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NursesColumns holds the columns for the "nurses" table.
	NursesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "nurse_email", Type: field.TypeString},
		{Name: "nurse_name", Type: field.TypeString},
		{Name: "nurse_tel", Type: field.TypeString},
		{Name: "nurse_password", Type: field.TypeString},
	}
	// NursesTable holds the schema information for the "nurses" table.
	NursesTable = &schema.Table{
		Name:        "nurses",
		Columns:     NursesColumns,
		PrimaryKey:  []*schema.Column{NursesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PrescriptionsColumns holds the columns for the "prescriptions" table.
	PrescriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "prescrip_note", Type: field.TypeString},
		{Name: "prescrip_date_time", Type: field.TypeTime},
		{Name: "doctor_id", Type: field.TypeInt, Nullable: true},
		{Name: "drug_id", Type: field.TypeInt, Nullable: true},
		{Name: "nurse_id", Type: field.TypeInt, Nullable: true},
		{Name: "patient_id", Type: field.TypeInt, Nullable: true},
	}
	// PrescriptionsTable holds the schema information for the "prescriptions" table.
	PrescriptionsTable = &schema.Table{
		Name:       "prescriptions",
		Columns:    PrescriptionsColumns,
		PrimaryKey: []*schema.Column{PrescriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "prescriptions_doctors_doctor_prescription",
				Columns: []*schema.Column{PrescriptionsColumns[3]},

				RefColumns: []*schema.Column{DoctorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_drugs_drug_prescription",
				Columns: []*schema.Column{PrescriptionsColumns[4]},

				RefColumns: []*schema.Column{DrugsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_nurses_nurse_prescription",
				Columns: []*schema.Column{PrescriptionsColumns[5]},

				RefColumns: []*schema.Column{NursesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_patients_patient_prescription",
				Columns: []*schema.Column{PrescriptionsColumns[6]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DoctorsTable,
		DrugsTable,
		NursesTable,
		PatientsTable,
		PrescriptionsTable,
	}
)

func init() {
	PrescriptionsTable.ForeignKeys[0].RefTable = DoctorsTable
	PrescriptionsTable.ForeignKeys[1].RefTable = DrugsTable
	PrescriptionsTable.ForeignKeys[2].RefTable = NursesTable
	PrescriptionsTable.ForeignKeys[3].RefTable = PatientsTable
}
